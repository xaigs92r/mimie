on:
    push:
    repository_dispatch:

jobs:
    backup:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        steps:
        - uses: actions/checkout@main
        - run: |
              git pull --unshallow
              echo '${{secrets.KEY}}' > key
              chmod 400 key
              git -c core.sshCommand='ssh -i key -o StrictHostKeyChecking=no' push -f git@bitbucket.org:chaowenguo/${GITHUB_REPOSITORY#*/}
    mime:
        runs-on: ubuntu-latest
        if: github.event.action == '2h'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-node@main
          with:
              node-version: 18.x
        - env:
              PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
              DEBUG: pw:api
          run: |
              curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > package.json
              npm install playwright-chromium
              npx playwright install ffmpeg
              timeout 110m xvfb-run node mime.js ${{secrets.PASSWORD}}
        - uses: actions/upload-artifact@main
          with:
              path: |
                  videos
                  screenshot.png
    clean:
        runs-on: ubuntu-latest
        permissions:
            actions: write
        steps:
        - uses: actions/setup-python@main
          with:
              python-version: 3.x
        - run: |
              pip install aiohttp
              curl https://bitbucket.org/chaowenguo/common/raw/main/clean.py | python - ${{secrets.GITHUB_TOKEN}}
    subscribe:
        runs-on: ubuntu-latest
        if: github.event.action == '12h'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-node@main
          with:
              node-version: 18.x
        - env:
              PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
              DEBUG: pw:api
          run: |
              curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > package.json
              npm install playwright-chromium
              npx playwright install ffmpeg
              xvfb-run node subscribe.js ${{secrets.PASSWORD}}
        - uses: actions/upload-artifact@main
          with:
              path: videos
    divio:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-node@main
          with:
              node-version: 17.x
        - run: curl https://${GITHUB_REPOSITORY%/*}.github.io/common/version.js | node --input-type=module
        - uses: actions/setup-node@main
          with:
              node-version: ${{env.JS}}
        - run: |
              curl https://${{secrets.GITHUB}}@raw.githubusercontent.com/chaowenGUO/server/main/key > key
              chmod 400 key
              git -c core.sshCommand='ssh -i key -o StrictHostKeyChecking=no' clone git@git.divio.com:js
              curl https://${GITHUB_REPOSITORY%/*}.github.io/common/package.json > js/package.json
              npm install --prefix js node-fetch
              mv divio/Dockerfile divio/server.js js
              cd js
              git add -A
              git config user.email dummy
              git config user.name dummy
              git commit --allow-empty-message -m ''
              git -c core.sshCommand='ssh -i ../key' push
    #ytuner:
    #    runs-on: ubuntu-latest
    #    if: github.event.schedule == '0 */6 * * *'
    #    steps:
    #    - uses: actions/checkout@main
    #    - uses: actions/setup-node@main
    #      with:
    #          node-version: 17.x
    #    - env:
    #          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    #          DEBUG: pw:api
    #      run: |
    #          npm install playwright-chromium
    #          npx playwright install ffmpeg
    #          curl https://${GITHUB_REPOSITORY%/*}.github.io/common/package.json > package.json
    #          xvfb-run node ytuner.js ${{secrets.PASSWORD}}
    #    - uses: actions/upload-artifact@main
    #      with:
    #          path: |
    #              videos
    #              screenshot.png3
    #              last.html
    
    #colab:
    #    runs-on: ubuntu-latest
    #    if: github.event.action == '10min'
    #    steps:
    #    - uses: actions/checkout@main
    #    - uses: actions/setup-node@main
    #      with:
    #          node-version: 18.x
    #    - env:
    #          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
    #          DEBUG: pw:api
    #      run: |
    #          curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > package.json
    #          npm install playwright-chromium
    #          npx playwright install ffmpeg
    #          xvfb-run node colab.js
    #    - uses: actions/upload-artifact@main
    #      with:
    #          path: videos
    colabCron:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-node@main
          with:
              node-version: 18.x
        - run: |
              echo '${{secrets.GCLOUD}}' > gcloud
              curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > package.json
              npm install google-auth-library
              node cron.js ${{secrets.GITHUB}}
    googleAccount:
        runs-on: ubuntu-latest
        if: github.event_name == 'push'
        permissions:
            contents: write
        steps:
        - uses: actions/checkout@main
        - run: |
              echo '${{secrets.KEY}}' > key
              chmod 400 key
              rm -rf google-chrome
              sudo apt update
              sudo apt install -y --no-install-recommends miredo
              ssh -o StrictHostKeyChecking=no -i key root@2a02:180:6:1::3142 'rm -rf .config/google-chrome/Singleton*'
              scp -o StrictHostKeyChecking=no -i key -r root@[2a02:180:6:1::3142]:.config/google-chrome .
              git add google-chrome
              git config user.name dummy
              git config user.email dummy
              git commit --allow-empty-message -m \ 
              git push -f
    ptc:
        runs-on: ubuntu-latest
        if: github.event.action == '12h'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-java@main
          with:
              java-version: 18.x
              distribution: zulu
        - env:
              PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
              DEBUG: pw:api
          run: |
              sudo apt update
              sudo apt install -y --no-install-recommends libopencv-dev tesseract-ocr
              gradle --warning-mode all copyDependencies
              java -cp copyDependencies/`ls copyDependencies/playwright-*.jar`:copyDependencies/* com.microsoft.playwright.CLI install ffmpeg
              javac -cp /usr/share/java/opencv.jar:copyDependencies/* Main.java || true
              xvfb-run java -Djava.library.path=/usr/lib/jni -cp /usr/share/java/opencv.jar:copyDependencies/*:. Main ${{secrets.PASSWORD}}
        - uses: actions/upload-artifact@main
          with:
              path: videos
    gcloudApp:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - run: |
              #curl https://updates.peer2profit.app/p2pclient_0.59_amd64.deb.zip | gunzip > p2pclient.deb
              #dpkg --fsys-tarfile p2pclient.deb | tar xf - ./usr/bin/p2pclient
              #mv usr/bin/p2pclient gcloudApp
              curl https://bitbucket.org/chaowenguo/pal/raw/main/p2pclient > gcloudApp/p2pclient
              chmod +x gcloudApp/p2pclient
              curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > gcloudApp/package.json
              echo '${{secrets.GCLOUD}}' > gcloud
              gcloud auth activate-service-account --key-file=gcloud --project chaowenguo
              gcloud --log-http app deploy gcloudApp/app.yaml
    gcloudRun:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-node@main
          with:
              node-version: 18.x
        - run: |
              tar -czf gcloudRun/build.tar.gz -C gcloudRun Dockerfile
              echo '${{secrets.GCLOUD}}' > gcloudRun/gcloud
              curl https://bitbucket.org/chaowenguo/common/raw/main/package.json > gcloudRun/package.json
              npm install --prefix gcloudRun google-auth-library
              node gcloudRun/storage.js
              cat gcloud | docker login -u _json_key --password-stdin https://gcr.io
              sed -i \$s/RUN/ENTRYPOINT/g Dockerfile 
              docker build -t gcr.io/chaowenguo/pal .
              docker push gcr.io/chaowenguo/pal
              docker build -t gcr.io/chaowenguo/gcloudrun -f gcloudRun/gcloudRun.Dockerfile gcloudRun
              docker push gcr.io/chaowenguo/gcloudrun
              node gcloudRun/run.js
    inboxdollars:
        runs-on: ubuntu-latest
        #if: github.event.schedule == '0 */1 * * *'
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-node@main
          with:
              node-version: 18.x
        - env:
              PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
              DEBUG: pw:api
          run: |
              curl https://raw.githubusercontent.com/$GITHUB_REPOSITORY_OWNER/common/main/package.json > package.json
              npm install playwright-chromium
              npx playwright install ffmpeg
              xvfb-run node inboxdollars.js ${{secrets.PASSWORD}}
        - uses: actions/upload-artifact@main
          with:
              path: |
                  videos
                  screenshot.png
    divioJava:
        runs-on: ubuntu-latest
        if: github.event_name == 'dummy'
        steps:
        - uses: actions/checkout@main
        - uses: actions/setup-java@main
          with:
              java-version: 17.x
              distribution: zulu
        - run: curl https://${GITHUB_REPOSITORY%/*}.github.io/common/version.jsh | jshell -
        - uses: actions/setup-java@main
          with:
              java-version: ${{env.JAVA}}
              distribution: zulu
        - run: |
              curl https://${{secrets.GITHUB}}@raw.githubusercontent.com/chaowenGUO/server/main/key > key
              chmod 400 key
              git -c core.sshCommand='ssh -i key -o StrictHostKeyChecking=no' clone git@git.divio.com:java
              gradle -p divioJava --warning-mode all copyDependencies
              javac -Xlint:deprecation -cp divioJava/copyDependencies/*:. divioJava/Server.java
              mv divioJava/Dockerfile divioJava/Server.class divioJava/copyDependencies java
              cd java
              git add -Acurl https://bitbucket.org/chaowenguo/pal/raw/main/p2pclient > p2pclient
              git config user.email dummy
              git config user.name dummy
              git commit --allow-empty-message -m ''
              git -c core.sshCommand='ssh -i ../key' push
